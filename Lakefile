# busybox = import("lake/lib/busybox")


store "busybox_tar" {
  env     = { fetch_url = "true", url = "https://brmbl.s3.amazonaws.com/busybox-x86_64.tar.gz" }
  network = true
}

store "busybox_store" {
  inputs = ["./install.sh", ]
  shell  = ["${busybox_tar}/busybox-x86_64", "sh"]
  script = <<EOH
    ${busybox_tar}/busybox-x86_64 sh ./install.sh
  EOH
}




command "busybox" {
  shell  = ["${busybox_tar}/busybox-x86_64", "sh"]
  inputs = [busybox_store]
  script = <<EOH
  PATH=$PATH:$busybox_store/bin
  sh $@
  EOH
}


shell = [busybox]


defaults {
  # Shell? Builder? Interpreter? Command
  shell = shell
}

command "hello" { script = "echo 'hello $1'" }

command "busybox_shell" {
  script = <<EOH
    #!${busybox_tar}/bin/busybox sh
    export PATH=$busybox_store/bin/
    sh $@
  EOH
}

store "empty_store" {
  inputs = []
  script = <<EOH
    sh ./script.sh
  EOH
}


store "one" {
  inputs = ["./script.sh"]
  script = "./script.sh"
}

# I can override?
store "two" {
  shell  = ["${busybox_tar}/bin/busybox", "bash", "-c"]
  inputs = ["./script.sh"]
  script = "./script.sh"
}

hi = "hi"
# Look how minimal?
command "say-hi" { script = "echo ${hi}" }

command "say-hi-explicit-shell" {
  shell  = [shell]
  script = "echo ${hi}"
}


# These are just for validating various rust things
for_expr         = [for o in shell : o]
splat_expr       = shell[*]
conditional_expr = true ? shell : shell

# unimplemented
# template_expr    = "Hello, %{if busybox.busybox != ""}${busybox.busybox}%{else}unnamed%{endif}!"
